openapi: 3.0.0
info:
  title: "üé• API de Filmes"
  version: "1.0.0"
  description: "Documenta√ß√£o da API de Filmes"

servers:
  - url: http://localhost:8080
    description: Servidor Local

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
      description: "Autentica√ß√£o via basic auth. Informe o usu√°rio e senha para acessar a API."
  schemas:
    Movie:
      type: object
      description: "Representa um filme armazenado no sistema"
      properties:
        id:
          type: integer
          description: "Identificador √∫nico do filme"
          example: 3
        title:
          type: string
          description: "T√≠tulo do filme"
          example: "Interstellar"
        synopsis:
          type: string
          description: "Sinopse do filme"
          example: "The adventures of a group of explorers..."
        release_year:
          type: string
          format: date
          description: "Ano de lan√ßamento do filme (formato YYYY-MM-DD)"
          example: "2014-11-05"
        genre:
          type: string
          description: "G√™nero do filme"
          example: "Adventure"
        status:
          type: string
          description: "Status do filme (ex: A assistir, Assistido, Recomendado, N√£o recomendado)"
          example: "Recomendado"
        avaliation:
          type: integer
          description: "Nota do filme (de 0 a 5)"
          example: 5

security:
  - BasicAuth: []

paths:
  /movies:
    get:
      summary: "Lista todos os filmes"
      description: "Lista todos os filmes com pagina√ß√£o"
      tags:
        - "Movies"
      security:
        - BasicAuth: []
      parameters:
        - name: filter
          in: query
          required: false
          description: "Filtro para buscar filmes pelo t√≠tulo"
          schema:
            type: string
            enum: ["A assistir", "Assistido", "Avaliado", "Recomendado", "N√£o recomendado"]
      responses:
        "200":
          description: "Lista de filmes retornada com sucesso"
          content:
            application/json:
               examples:
                sem_filtro:
                  summary: "Resposta sem filtro"
                  value:
                    currentPage: 1
                    totalPage: 1
                    totalMovies: 4
                    data:
                      - id: 1
                        title: "Interstellar"
                        status: "Recomendado"
                      - id: 2
                        title: "Oppenheimer"
                        status: "Assistido"
                com_filtro:
                  summary: "Resposta filtrando por status 'Recomendado'"
                  value:
                    currentPage: 1
                    totalPage: 1
                    totalMovies: 1
                    data:
                      - id: 1
                        title: "Interstellar"
                        status: "Recomendado"
        "500":
          description: "Erro interno do servidor"
          content:
            application/json:
              example:
                message: "Erro interno do servidor"
    post:
      summary: "Adiciona um novo filme"
      description: "Adiciona um novo filme com base no Titulo do filme"
      tags:
        - "Movies"
      security:
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            example:
              title: "Interstellar"
      responses:
        "201":
          description: "Filme criado com sucesso"
          content:
            application/json:
              example:
                message: "Filme criado com sucesso"
                movie:
                  id: 5
                  title: "Interstellar"
                  synopsis: "The adventures of a group of explorers..."
                  release_year: "2014-11-05"
                  genre: "Adventure"
                  status: "A assistir"
                  avaliation: 0
        "400":
          description: "Titulo n√£o informado"
          content:
            application/json:
              example:
                message: "Titulo √© obrigat√≥rio"         
        "401":
            description: "Usuario n√£o autorizado"
            content:
              application/json:
                example:
                  message: "Usu√°rio n√£o autorizado"
        "500":
            description: "Erro interno do servidor"
            content:
              application/json:
                example:
                  message: "Erro interno do servidor"


  /movies/{id}:
    get:
      summary: "Busca um filme pelo ID"
      description: "Busca um filme pelo ID"
      tags:
        - "Movies"
      security:
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID do filme a ser buscado"
          schema:
            type: integer
            example: 3
      responses:
        "200":
          description: "Detalhes do filme"
          content:
            application/json:
              example:
                id: 3
                title: "Interstellar"
                synopsis: "The adventures of a group of explorers..."
                release_year: "2014-11-05"
                genre: "Adventure"
                status: "Recomendado"
                avaliation: 5
        "400":
          description: "ID inv√°lido"
          content:
            application/json:
              example:
                message: "ID inv√°lido"
        "404":
          description: "Filme n√£o encontrado"
          content:
            application/json:
              example:
                message: "Filme n√£o encontrado"
        "500":
          description: "Erro interno do servidor"
          content:
            application/json:
              example:
                message: "Erro ao buscar filme"
                

  /movies/{id}/history:
    get:
      summary: "Obt√©m o hist√≥rico de a√ß√µes de um filme"
      description: "Obt√©m o hist√≥rico de a√ß√µes de um filme"
      tags:
        - "Movies"
      security:
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID do filme que ser√° utilizado para buscar o history"
          schema:
            type: integer
            example: 3
      responses:
        "200":
          description: "Hist√≥rico de a√ß√µes do filme"
          content:
            application/json:
              example:
                currentPage: 1
                totalPage: 1
                totalMovie: 4
                data:
                  - id: 8
                    movie_id: 3
                    action: "Criado"
                    details: "A assistir"
                    user: "admin"
                    timestamp: "2025-02-08 04:01:20"
        "400":
          description: "iD inv√°lido"
          content:
            application/json:
              example:
                message: "ID inv√°lido"
        "404":
          description: "Hist√≥rico n√£o encontrado"
          content:
            application/json:
              example:
                message: "Hist√≥rico n√£o encontrado"

  /movies/{id}/status:
    put:
      summary: "Atualiza o status de um filme"
      description: "Atualiza o status de um filme com base nos seguintes status: 'A assistir', 'Assistido', 'Recomendado' e 'N√£o recomendado'"
      tags:
        - "Movies"
      security:
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID do filme que tera o status alterado"
          schema:
            type: integer
            example: 3
      requestBody:
        required: true
        content:
          application/json:
            example:
              status: "Recomendado"
      responses:
        "200":
          description: "Status atualizado com sucesso"
          content:
            application/json:
              example:
                message: "Status atualizado com sucesso"
                updatedMovie:
                  id: "3"
                  status: "Recomendado"
        "400":
          description: "Requisi√ß√£o inv√°lida"
          content:
            application/json:
              examples:
                status_nao_informado:
                  summary: "Status n√£o informado"
                  value:
                    message: "Status √© obrigat√≥rio"
                id_invalido:
                  summary: "ID inv√°lido"
                  value:
                    message: "ID inv√°lido"
                status_invalido:
                  summary: "Filme precisa ser avaliado antes de ser recomendado/n√£o recomendado"
                  value:
                    message: "Filme precisa ser avaliado antes de ser recomendado/n√£o recomendado"
        "404":
          description: "Filme n√£o encontrado"
          content:
            application/json:
              example:
                message: "Filme n√£o encontrado"     
        "401":
            description: "Usuario n√£o autorizado"
            content:
              application/json:
                example:
                  message: "Usu√°rio n√£o autorizado"
        "500":
            description: "Erro interno do servidor"
            content:
              application/json:
                example:
                  message: "Erro interno do servidor"

  /movies/{id}/avaliation:
    post:
      summary: "Avalia um filme"
      description: "Avalia um filme com base em uma nota de 0 a 5"
      tags:
        - "Movies"
      security:
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID do filme a ser avaliado"
          schema:
            type: integer
            example: 3
      requestBody:
        required: true
        content:
          application/json:
            example:
              avaliation: 5
      responses:
        "201":
          description: "Filme avaliado com sucesso"
          content:
            application/json:
              example:
                message: "Filme avaliado com sucesso"
                updatedMovie:
                  id: "3"
                  avaliation: 5
        "400":
          description: "Avalia√ß√£o √© obrigat√≥ria"
          content:
            application/json:
              example:
              examples:
                avaliation_not_informed:
                  summary: "Avalia√ß√£o √© obrigat√≥ria"
                  value:
                    message: "Avalia√ß√£o √© obrigat√≥ria"
                avaliation_number:
                  summary: "Avalia√ß√£o deve ser um n√∫mero entre 0 e 5"
                  value:
                    message: "Avalia√ß√£o deve ser um n√∫mero entre 0 e 5"
        "401":
          description: "Usuario n√£o autorizado"
          content:
           application/json:
             example:
              message: "Usu√°rio n√£o autorizado"
        "500":
          description: "Erro interno do servidor"
          content:
            application/json:
              example:
                message: "Erro interno do servidor"

/logs:
    get:
      summary: "Busca logs"
      description: "Busca logs"
      tags:
        - "Logs"
      security:
        - BasicAuth: []
      responses:
        "200":
          description: "Logs encontrados com sucesso"
          content:
            application/json:
              example:
                curretPage: 1
                totalPage: 1
                totalLogs: 3
                data:
                  - id: 1
                    method: GET
                    url: /movies
                    status: 200
                    user: admin
                    timestamp: 2022-02-08 04:01:20
                    duration: 1000
                  - id: 2
                    method: GET
                    url: /movies/1
                    status: 200 
                    user: admin
                    timestamp: 2022-02-08 04:01:20
                    duration: 1000  